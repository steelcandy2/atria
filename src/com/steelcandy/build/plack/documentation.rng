<?xml version="1.0"?>
<!--
  Copyright (C) 2006 by James MacKay.

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <https://www.gnu.org/licenses/>.
-->
<grammar xmlns="http://relaxng.org/ns/structure/1.0">
    <start>
        <element name="documents">
            <zeroOrMore>
                <ref name="book"/>
            </zeroOrMore>
        </element>
    </start>

    <define name="book">
        <element name="book">
            <ref name="tagAttribute"/>
            <ref name="title"/>
            <ref name="authors"/>
            <ref name="copyright"/>
            <zeroOrMore>
                <ref name="chapter"/>
            </zeroOrMore>
        </element>
    </define>

    <define name="chapter">
        <element name="chapter">
            <ref name="tagAttribute"/>
            <optional>
                <attribute name="appendix">
                    <ref name="booleanValues"/>
                </attribute>
            </optional>

            <ref name="title"/>

            <!-- Change to 'oneOrMore' to disallow empty chapters. -->
            <zeroOrMore>
                <choice>
                    <ref name="section"/>
                    <ref name="content"/>
                </choice>
            </zeroOrMore>
        </element>
    </define>

    <define name="section">
        <element name="section">
            <ref name="tagAttribute"/>
            <ref name="title"/>

            <!-- Change to 'oneOrMore' to disallow empty sections. -->
            <zeroOrMore>
                <choice>
                    <ref name="subsection"/>
                    <ref name="content"/>
                </choice>
            </zeroOrMore>
        </element>
    </define>

    <define name="subsection">
        <element name="subsection">
            <ref name="tagAttribute"/>
            <ref name="title"/>

            <!-- Change to 'oneOrMore' to disallow empty subsections. -->
            <zeroOrMore>
                <ref name="content"/>
            </zeroOrMore>
        </element>
    </define>


    <define name="content">
        <zeroOrMore>
            <element name="p">
                <ref name="inlineContent"/>
            </element>
        </zeroOrMore>
    </define>


    <define name="inlineContent">
        <zeroOrMore>
            <choice>
                <ref name="spot"/>
                <ref name="spotlessInlineContent"/>
            </choice>
        </zeroOrMore>
    </define>

    <define name="spotlessInlineContent">
        <zeroOrMore>
            <choice>
                <text/>
                <ref name="list"/>
                <ref name="example"/>
                <ref name="codeBlock"/>
                <ref name="code"/>
                <ref name="var"/>
                <ref name="em"/>

                <ref name="reference"/>
                <ref name="externalReference"/>

                <ref name="languageName"/>
                <ref name="constant"/>
                <ref name="reservedWord"/>
                <ref name="grammarRules"/>
                <ref name="grammarRule"/>
                <ref name="constructConstraints"/>
            </choice>
        </zeroOrMore>
    </define>

    <define name="list">
        <element name="list">
            <oneOrMore>
                <ref name="listItem"/>
            </oneOrMore>
        </element>
    </define>

    <define name="listItem">
        <element name="item">
            <ref name="inlineContent"/>
        </element>
    </define>

    <define name="example">
        <element name="example">
            <ref name="title"/>
            <ref name="inlineContent"/>
        </element>
    </define>

    <define name="codeBlock">
        <element name="code-block">
            <text/>
        </element>
    </define>

    <define name="code">
        <element name="code">
            <text/>
        </element>
    </define>

    <define name="var">
        <element name="var">
            <ref name="nameAttribute"/>
        </element>
    </define>

    <define name="em">
        <element name="em">
            <text/>     <!-- ??? -->
        </element>
    </define>


    <define name="spot">
        <element name="spot">
            <ref name="tagAttribute"/>

            <ref name="spotlessInlineContent"/>
        </element>
    </define>

    <define name="reference">
        <element name="ref">
            <ref name="referenceAttributes"/>

            <ref name="inlineContent"/>
        </element>
    </define>

    <define name="externalReference">
        <element name="external-ref">
            <attribute name="book">
                <ref name="tagAttributeValue"/>
            </attribute>
            <ref name="referenceAttributes"/>

            <ref name="inlineContent"/>
        </element>
    </define>

    <define name="referenceAttributes">
<!-- TODO: add the following checks (though not here) !!!
    - at least one of the following attributes must be present
    - at most one of 'spot' and 'part' can be present
-->
        <optional>
            <!-- Can match anything (from chapter to spot) -->
            <attribute name="part">
                <ref name="tagAttributeValue"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="chapter">
                <ref name="tagAttributeValue"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="section">
                <ref name="tagAttributeValue"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="subsection">
                <ref name="tagAttributeValue"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="spot">
                <ref name="tagAttributeValue"/>
            </attribute>
        </optional>
    </define>


    <define name="languageName">
        <element name="language-name">
            <empty/>
        </element>
    </define>

    <define name="constant">
        <element name="constant">
            <ref name="nameAttribute"/>
        </element>
    </define>

    <define name="reservedWord">
        <element name="reserved-word">
            <ref name="nameAttribute"/>
        </element>
    </define>

    <define name="grammarRules">
        <element name="grammar-rules">
            <oneOrMore>
                <ref name="grammarRule"/>
            </oneOrMore>
        </element>
    </define>

    <define name="grammarRule">
        <element name="grammar-rule">
            <ref name="nameAttribute"/>
        </element>
    </define>

    <define name="constructConstraints">
        <element name="construct-constraints">
            <attribute name="construct">
                <text/>
            </attribute>
        </element>
    </define>


    <define name="authors">
        <element name="authors">
            <zeroOrMore>
                <ref name="author"/>
            </zeroOrMore>
        </element>
    </define>

    <define name="author">
        <element name="author">
            <interleave>
                <element name="first-name">
                    <text/>
                </element>
                <element name="last-name">
                    <text/>
                </element>
            </interleave>
        </element>
    </define>

    <define name="copyright">
        <element name="copyright">
            <interleave>
                <element name="holder">
                    <text/>
                </element>
                <element name="years">
                    <attribute name="from">
                        <text/>     <!-- Should be 4+-digit positive integer -->
                    </attribute>
                    <optional>
                        <attribute name="to">
                            <text/> <!-- Should be 4+-digit positive integer -->
                        </attribute>
                    </optional>
                </element>
                <element name="message">
                    <text/>
                </element>
            </interleave>
        </element>
    </define>


    <define name="title">
        <element name="title">
            <ref name="inlineContent"/>
        </element>
    </define>

    <define name="tagAttribute">
        <attribute name="tag">
            <ref name="tagAttributeValue"/>
        </attribute>
    </define>

    <define name="nameAttribute">
        <attribute name="name">
            <text/>     <!-- non-empty, no spaces -->
        </attribute>
    </define>

    <define name="tagAttributeValue">
        <text/>     <!-- non-empty, no spaces -->
    </define>


    <define name="booleanValues">
        <choice>
            <value type="string">true</value>
            <value type="string">false</value>
        </choice>
    </define>
</grammar>
